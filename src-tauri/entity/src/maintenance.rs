//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.6

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "maintenance")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub maintenance_id: String,
    pub ride_id: String,
    pub description: String,
    pub status: String,
    pub date: Date,
    pub assigned_staff_id: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::ride::Entity",
        from = "Column::RideId",
        to = "super::ride::Column::RideId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Ride,
    #[sea_orm(
        belongs_to = "super::user::Entity",
        from = "Column::AssignedStaffId",
        to = "super::user::Column::UserId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    User,
}

impl Related<super::ride::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Ride.def()
    }
}

impl Related<super::user::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::User.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
